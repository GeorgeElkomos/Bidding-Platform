# Generated by Django 5.2.1 on 2025-06-23 10:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('User_Id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('website', models.URLField(blank=True)),
                ('CR_number', models.CharField(blank=True, max_length=50)),
                ('Is_Accepted', models.BooleanField(blank=True, default=None, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('_admin_type', models.CharField(blank=True, choices=[('technical', 'Technical Admin'), ('commercial', 'Commercial Admin')], db_column='admin_type', default='technical', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'XX_User',
                'verbose_name_plural': 'XX_Users',
                'db_table': 'xx_user',
            },
        ),
        migrations.CreateModel(
            name='VAT_Certificate_Manager',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('File_Name', models.CharField(max_length=100)),
                ('File_Type', models.CharField(max_length=255)),
                ('File_Size', models.PositiveIntegerField()),
                ('File_Data', models.BinaryField()),
                ('Uploaded_At', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(db_column='User_Id', on_delete=django.db.models.deletion.CASCADE, related_name='vat_certificates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Message', models.TextField()),
                ('Created_At', models.DateTimeField(auto_now_add=True)),
                ('Target_Type', models.CharField(choices=[('ALL', 'All Users'), ('SUPER', 'Super Users'), ('NORMAL', 'Normal Users'), ('SPECIFIC', 'Specific User')], default='SPECIFIC', max_length=10)),
                ('User', models.ForeignKey(blank=True, db_column='User_Id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='NotificationReadStatus',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Is_Read', models.BooleanField(default=False)),
                ('Read_At', models.DateTimeField(blank=True, null=True)),
                ('Notification', models.ForeignKey(db_column='Notification_Id', on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='User.notification')),
                ('User', models.ForeignKey(db_column='User_Id', on_delete=django.db.models.deletion.CASCADE, related_name='notification_statuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Read Status',
                'verbose_name_plural': 'Notification Read Statuses',
                'db_table': 'notification_read_status',
                'unique_together': {('User', 'Notification')},
            },
        ),
    ]
