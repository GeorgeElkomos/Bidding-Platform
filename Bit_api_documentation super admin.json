{
  "api_documentation": {
    "base_url": "http://127.0.0.1:8000",
    "description": "Bidding Platform Bit API Documentation",
    "version": "1.0.0",
    "endpoints": [
      {
        "name": "Get All Bits For Tender",
        "method": "GET",
        "endpoint": "/api/Bit/getallfortender/",
        "description": "Retrieves a list of all bids for a specific tender with search, filtering and pagination",
        "authentication": "JWT Token required (with SuperUser permissions)",
        "request": {
          "parameters": {
            "tender_id": {
              "type": "integer",
              "required": true,
              "location": "query",
              "description": "The ID of the tender to retrieve bids for"
            },
            "page": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Page number for pagination",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Number of items per page",
              "default": 5,
              "max": 100
            },
            "search": {
              "type": "string",
              "required": false,
              "location": "query",
              "description": "Search term to filter bits by title, description, or creator username"
            },
            "min_cost": {
              "type": "number",
              "required": false,
              "location": "query",
              "description": "Minimum cost to filter bits"
            },
            "max_cost": {
              "type": "number",
              "required": false,
              "location": "query",
              "description": "Maximum cost to filter bits"
            },
            "start_date": {
              "type": "string (ISO date)",
              "required": false,
              "location": "query",
              "description": "Start date to filter bits"
            },
            "end_date": {
              "type": "string (ISO date)",
              "required": false,
              "location": "query",
              "description": "End date to filter bits"
            },
            "is_accepted": {
              "type": "string (true/false)",
              "required": false,
              "location": "query",
              "description": "Filter bits by acceptance status"
            }
          },
          "example_url": "/api/Bit/getallfortender/?tender_id=1&page=1&page_size=10&search=proposal&min_cost=10000&max_cost=50000"
        },
        "responses": {
          "200": {
            "description": "Bits retrieved successfully",
            "body": {
              "count": 10,
              "next": "http://127.0.0.1:8000/api/Bit/getallfortender/?tender_id=1&page=2",
              "previous": null,
              "results": {
                "message": "Bits retrieved successfully",
                "search_query": "proposal",
                "filters": {
                  "min_cost": "10000",
                  "max_cost": "50000",
                  "start_date": null,
                  "end_date": null,
                  "is_accepted": null
                },
                "total_count": 10,
                "data": [
                  {
                    "bit_id": 1,
                    "title": "Construction Proposal A",
                    "date": "2025-06-10T09:00:00Z",
                    "created_by": {
                      "user_id": 3,
                      "username": "company1"
                    },
                    "cost": "45000.00",
                    "is_accepted": false
                  },
                  {
                    "bit_id": 2,
                    "title": "Construction Proposal B",
                    "date": "2025-06-11T14:30:00Z",
                    "created_by": {
                      "user_id": 4,
                      "username": "company2"
                    },
                    "cost": "38500.00",
                    "is_accepted": true
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing tender_id",
            "body": {
              "message": "tender_id is required",
              "data": []
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "403": {
            "description": "Forbidden - User doesn't have SuperUser permissions",
            "body": {
              "detail": "You do not have permission to perform this action."
            }
          },
          "404": {
            "description": "Not Found - Tender not found",
            "body": {
              "message": "Tender not found",
              "data": []
            }
          },
          "500": {
            "description": "Server Error",
            "body": {
              "message": "Error message",
              "data": []
            }
          }
        }
      },
      {
        "name": "Get All My Bits",
        "method": "GET",
        "endpoint": "/api/Bit/getmy/",
        "description": "Retrieves a list of all bids created by the authenticated user with search, filtering and pagination",
        "authentication": "JWT Token required (with Company permissions)",
        "request": {
          "parameters": {
            "page": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Page number for pagination",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Number of items per page",
              "default": 5,
              "max": 100
            },
            "search": {
              "type": "string",
              "required": false,
              "location": "query",
              "description": "Search term to filter bits by title, description, or tender title"
            },
            "min_cost": {
              "type": "number",
              "required": false,
              "location": "query",
              "description": "Minimum cost to filter bits"
            },
            "max_cost": {
              "type": "number",
              "required": false,
              "location": "query",
              "description": "Maximum cost to filter bits"
            },
            "start_date": {
              "type": "string (ISO date)",
              "required": false,
              "location": "query",
              "description": "Start date to filter bits"
            },
            "end_date": {
              "type": "string (ISO date)",
              "required": false,
              "location": "query",
              "description": "End date to filter bits"
            },
            "is_accepted": {
              "type": "string (true/false)",
              "required": false,
              "location": "query",
              "description": "Filter bits by acceptance status"
            },
            "tender_id": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Filter bits by tender ID"
            }
          },
          "example_url": "/api/Bit/getmy/?page=1&page_size=10&search=proposal&tender_id=1"
        },
        "responses": {
          "200": {
            "description": "Bits retrieved successfully",
            "body": {
              "count": 5,
              "next": null,
              "previous": null,
              "results": {
                "message": "Bits retrieved successfully",
                "search_query": "proposal",
                "filters": {
                  "min_cost": null,
                  "max_cost": null,
                  "start_date": null,
                  "end_date": null,
                  "is_accepted": null,
                  "tender_id": "1"
                },
                "total_count": 5,
                "data": [
                  {
                    "bit_id": 1,
                    "title": "Construction Proposal A",
                    "date": "2025-06-10T09:00:00Z",
                    "cost": "45000.00",
                    "is_accepted": false,
                    "tender": {
                      "tender_id": 1,
                      "title": "Construction Project Alpha"
                    }
                  },
                  {
                    "bit_id": 3,
                    "title": "Design Proposal",
                    "date": "2025-06-12T10:15:00Z",
                    "cost": "28000.00",
                    "is_accepted": false,
                    "tender": {
                      "tender_id": 1,
                      "title": "Construction Project Alpha"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "403": {
            "description": "Forbidden - User doesn't have Company permissions",
            "body": {
              "detail": "You do not have permission to perform this action."
            }
          },
          "500": {
            "description": "Server Error",
            "body": {
              "message": "Error message",
              "data": []
            }
          }
        }
      },
      {
        "name": "Bit Details",
        "method": "GET",
        "endpoint": "/api/Bit/details/",
        "description": "Retrieves detailed information about a specific bit including all associated files",
        "authentication": "JWT Token required",
        "request": {
          "parameters": {
            "bit_id": {
              "type": "integer",
              "required": true,
              "location": "query",
              "description": "The ID of the bit to retrieve details for"
            }
          },
          "example_url": "/api/Bit/details/?bit_id=1"
        },
        "responses": {
          "200": {
            "description": "Bit details retrieved successfully",
            "body": {
              "message": "Bit details retrieved successfully",
              "data": {
                "bit_id": 1,
                "title": "Construction Proposal A",
                "description": "Detailed proposal for construction project with timeline and resources",
                "date": "2025-06-10T09:00:00Z",
                "created_by": {
                  "user_id": 3,
                  "username": "company1"
                },
                "cost": "45000.00",
                "tender": {
                  "tender_id": 1,
                  "title": "Construction Project Alpha"
                },
                "files": [
                  {
                    "file_id": 1,
                    "file_name": "proposal.pdf",
                    "file_type": "application/pdf",
                    "file_size": 1048576,
                    "uploaded_at": "2025-06-09T14:30:00Z"
                  },
                  {
                    "file_id": 2,
                    "file_name": "budget.xlsx",
                    "file_type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "file_size": 512000,
                    "uploaded_at": "2025-06-09T14:35:00Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing bit_id",
            "body": {
              "message": "bit_id is required",
              "data": []
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "404": {
            "description": "Not Found - Bit not found",
            "body": {
              "message": "Bit not found",
              "data": []
            }
          },
          "500": {
            "description": "Server Error",
            "body": {
              "message": "Error message",
              "data": []
            }
          }
        }
      },
      {
        "name": "Get Bit File Data",
        "method": "GET",
        "endpoint": "/api/Bit/getfiledata/",
        "description": "Retrieves file data or metadata for a specific bit file",
        "authentication": "JWT Token required",
        "request": {
          "parameters": {
            "file_id": {
              "type": "integer",
              "required": true,
              "location": "query",
              "description": "The ID of the file to retrieve"
            },
            "metadata_only": {
              "type": "string (true/false)",
              "required": false,
              "location": "query",
              "description": "If true, only returns file metadata instead of the actual file",
              "default": "false"
            }
          },
          "example_url": "/api/Bit/getfiledata/?file_id=1&metadata_only=true"
        },
        "responses": {
          "200": {
            "description": "File data retrieved successfully",
            "body": {
              "message": "File metadata retrieved successfully",
              "data": {
                "file_id": 1,
                "file_name": "proposal.pdf",
                "file_type": "application/pdf",
                "file_size": 1048576,
                "uploaded_at": "2025-06-09T14:30:00Z"
              }
            }
          },
          "200 (File Download)": {
            "description": "File returned as a downloadable attachment",
            "body": "Binary file data"
          },
          "400": {
            "description": "Bad Request - Missing file_id",
            "body": {
              "message": "file_id is required",
              "data": []
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "404": {
            "description": "Not Found - File not found",
            "body": {
              "message": "File not found",
              "data": []
            }
          },
          "500": {
            "description": "Server Error",
            "body": {
              "message": "Error message",
              "data": []
            }
          }
        }
      },
      {
        "name": "Bit Request Respond",
        "method": "POST",
        "endpoint": "/api/Bit/bit_request_respond/",
        "description": "Responds to a bit (accept or reject)",
        "authentication": "JWT Token required (with SuperUser permissions)",
        "request": {
          "content_type": "application/json",
          "body": {
            "bit_id": {
              "type": "integer",
              "required": true,
              "description": "The ID of the bit to respond to"
            },
            "action": {
              "type": "string",
              "required": true,
              "description": "The action to take (Accept or Reject)",
              "enum": ["Accept", "Reject"]
            }
          },
          "example_request": {
            "bit_id": 1,
            "action": "Accept"
          }
        },
        "responses": {
          "200": {
            "description": "Bit responded to successfully",
            "body": {
              "message": "Bit Accepted successfully.",
              "data": {
                "bit_id": 1,
                "Is_Accepted": true,
                "action": "Accept"
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing bit_id or invalid action",
            "body": {
              "error": "Invalid action. Use 'Accept' or 'Reject'."
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "403": {
            "description": "Forbidden - User doesn't have SuperUser permissions",
            "body": {
              "detail": "You do not have permission to perform this action."
            }
          },
          "404": {
            "description": "Not Found - Bit not found",
            "body": {
              "message": "Bit not found.",
              "data": []
            }
          }
        }
      }
    ]
  }
}
