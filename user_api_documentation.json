{
  "api_documentation": {
    "base_url": "http://127.0.0.1:8000",
    "description": "Bidding Platform User API Documentation",
    "version": "1.0.1",
    "endpoints": [
      {
        "name": "User Login",
        "method": "POST",
        "endpoint": "/api/User/login/",
        "description": "Authenticates a user and returns a JWT access token",
        "authentication": "None required",
        "request": {
          "content_type": "application/json",
          "body": {
            "username": {
              "type": "string",
              "required": true,
              "description": "User's username"
            },
            "password": {
              "type": "string",
              "required": true,
              "description": "User's password"
            }
          },
          "example": {
            "username": "Admin2",
            "password": "Admin2"
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "condition": "Valid credentials and account is accepted",
            "body": {
              "message": "Login successful.",
              "data": {
                "Token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
                "user_id": 1,
                "username": "Admin2"
              }
            }
          },
          "400": {
            "description": "Bad request - missing credentials",
            "condition": "Username or password not provided",
            "body": {
              "message": "Username and password are required.",
              "data": []
            }
          },
          "401": {
            "description": "Invalid credentials",
            "condition": "Wrong username or password",
            "body": {
              "message": "Invalid credentials.",
              "data": []
            }
          },
          "403": {
            "description": "Account not accepted",
            "condition": "User account is not yet accepted by admin",
            "body": {
              "message": "Your account is not accepted yet.",
              "data": []
            }
          },
          "404": {
            "description": "User not found",
            "condition": "User does not exist in database",
            "body": {
              "message": "User does not exist.",
              "data": []
            }
          }
        }
      },
      {
        "name": "List All Users",
        "method": "GET",
        "endpoint": "/api/User/getall/",
        "description": "Retrieves a list of all users (excluding superusers) with pagination and search",
        "authentication": "JWT Token required + SuperUser permissions",
        "request": {
          "parameters": {
            "page": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Page number for pagination",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Number of items per page",
              "default": 10,
              "max": 100
            },
            "search": {
              "type": "string",
              "required": false,
              "location": "query",
              "description": "Search term to filter users by username, name or email"
            }
          },
          "example_url": "/api/User/getall/?page=1&page_size=10&search=company"
        },
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "body": {
              "count": 25,
              "next": "http://127.0.0.1:8000/api/User/getall/?page=2",
              "previous": null,
              "results": {
                "message": "Users retrieved successfully",
                "data": [
                  {
                    "user_Id": 1,
                    "username": "company1",
                    "name": "Company One Ltd",
                    "email": "contact@company1.com",
                    "Is_Accepted": true
                  },
                  {
                    "user_Id": 2,
                    "username": "company2",
                    "name": "Company Two Ltd",
                    "email": "contact@company2.com",
                    "Is_Accepted": false
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "403": {
            "description": "Forbidden - not a superuser",
            "body": {
              "detail": "You do not have permission to perform this action."
            }
          }
        }
      },
      {
        "name": "List All Superadmins",
        "method": "GET",
        "endpoint": "/api/User/getsuperadmins/",
        "description": "Retrieves a list of all superadmin users with pagination and search",
        "authentication": "JWT Token required + SuperUser permissions",
        "request": {
          "parameters": {
            "page": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Page number for pagination",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Number of items per page",
              "default": 10,
              "max": 100
            },
            "search": {
              "type": "string",
              "required": false,
              "location": "query",
              "description": "Search term to filter superadmins by username, name or email"
            }
          },
          "example_url": "/api/User/getsuperadmins/?page=1&page_size=10&search=admin"
        },
        "responses": {
          "200": {
            "description": "Superadmins retrieved successfully",
            "body": {
              "count": 5,
              "next": null,
              "previous": null,
              "results": {
                "message": "Superusers retrieved successfully",
                "data": [
                  {
                    "user_Id": 3,
                    "username": "admin1",
                    "name": "System Admin",
                    "email": "admin@biddingplatform.com"
                  },
                  {
                    "user_Id": 4,
                    "username": "admin2",
                    "name": "Technical Admin",
                    "email": "tech@biddingplatform.com"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "403": {
            "description": "Forbidden - not a superuser",
            "body": {
              "detail": "You do not have permission to perform this action."
            }
          }
        }
      },
      {
        "name": "User Details",
        "method": "GET",
        "endpoint": "/api/User/details/",
        "description": "Retrieves detailed information about a specific user including VAT certificates",
        "authentication": "JWT Token required",
        "request": {
          "parameters": {
            "User_Id": {
              "type": "integer",
              "required": true,
              "location": "query",
              "description": "The ID of the user to retrieve details for"
            }
          },
          "example_url": "/api/User/details/?User_Id=8"
        },
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "body": {
              "message": "User details retrieved successfully",
              "data": {
                "User_Id": 8,
                "username": "company1",
                "name": "Company One Ltd",
                "address": "123 Business Street",
                "phone_number": "+1234567890",
                "email": "contact@company1.com",
                "website": "www.company1.com",
                "CR_number": "CR123456",
                "Is_Accepted": true,
                "VAT_certificates": [
                  {
                    "file_id": 1,
                    "file_name": "vat_certificate.pdf",
                    "file_type": "application/pdf",
                    "file_size": 524288,
                    "uploaded_at": "2025-05-29T10:30:00Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request - User_Id missing",
            "body": {
              "message": "User_Id is required.",
              "data": []
            }
          },
          "404": {
            "description": "User not found",
            "body": {
              "message": "User not found.",
              "data": []
            }
          },
          "500": {
            "description": "Internal server error",
            "body": {
              "message": "Error message details",
              "data": []
            }
          }
        }
      },
      {
        "name": "Create Super User",
        "method": "POST",
        "endpoint": "/api/User/createsuperuser/",
        "description": "Creates a new superuser account with admin privileges",
        "authentication": "JWT Token required + SuperUser permissions",
        "request": {
          "content_type": "application/json",
          "body": {
            "username": {
              "type": "string",
              "required": true,
              "description": "Superuser username"
            },
            "password": {
              "type": "string",
              "required": true,
              "description": "Superuser password"
            },
            "email": {
              "type": "string",
              "required": true,
              "description": "Superuser email address"
            }
          },
          "example": {
            "username": "Admin2",
            "password": "Admin2",
            "email": "admin2@biddingplatform.com"
          }
        },
        "responses": {
          "201": {
            "description": "Superuser created successfully",
            "body": {
              "message": "Superuser created successfully.",
              "User_Id": 1
            }
          },
          "400": {
            "description": "Bad request - missing required fields or other error",
            "body": {
              "error": "Username, email, and password are required."
            }
          }
        }
      },
      {
        "name": "All Pending Requests",
        "method": "GET",
        "endpoint": "/api/User/get_all_pending_users/",
        "description": "Retrieves all companys request with pending approval status (Is_Accepted = null) with pagination and search",
        "authentication": "JWT Token required + SuperUser permissions",
        "request": {
          "parameters": {
            "page": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Page number for pagination",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "required": false,
              "location": "query",
              "description": "Number of items per page",
              "default": 10,
              "max": 100
            },
            "search": {
              "type": "string",
              "required": false,
              "location": "query",
              "description": "Search term to filter pending users by username, name or email"
            }
          },
          "example_url": "/api/User/get_all_pending_users/?page=1&page_size=10&search=company"
        },
        "responses": {
          "200": {
            "description": "Pending users retrieved successfully",
            "body": {
              "count": 8,
              "next": null,
              "previous": null,
              "results": [
                {
                  "User_Id": 4,
                  "username": "pending_user1",
                  "name": "Pending Company Ltd",
                  "email": "contact@pending.com"
                },
                {
                  "User_Id": 5,
                  "username": "pending_user2",
                  "name": "Another Pending Company",
                  "email": "info@anotherpending.com"
                }
              ]
            }
          },
          "400": {
            "description": "Error occurred",
            "body": {
              "error": "Error message details"
            }
          }
        }
      },
      {
        "name": "Account Request Respond",
        "method": "POST",
        "endpoint": "/api/User/account_request_respond/",
        "description": "Accepts or rejects a user account registration request",
        "authentication": "JWT Token required + SuperUser permissions",
        "request": {
          "content_type": "application/json",
          "body": {
            "User_Id": {
              "type": "integer",
              "required": true,
              "description": "ID of the user to respond to"
            },
            "response": {
              "type": "string",
              "required": true,
              "description": "Response action",
              "allowed_values": ["Accept", "Reject"]
            }
          },
          "example": {
            "User_Id": 4,
            "response": "Accept"
          }
        },
        "responses": {
          "200": {
            "description": "User response processed successfully",
            "body": {
              "message": "User accepted successfully."
            }
          },
          "400": {
            "description": "Invalid response value",
            "body": {
              "error": "Invalid response. Use 'Accept' or 'Reject'."
            }
          },
          "404": {
            "description": "User not found",
            "body": {
              "error": "User not found."
            }
          }
        }
      },
      {
        "name": "User File Data",
        "method": "GET",
        "endpoint": "/api/User/get_user_file_data/",
        "description": "Retrieves file data or metadata for a specific VAT certificate file",
        "authentication": "JWT Token required",
        "request": {
          "parameters": {
            "file_id": {
              "type": "integer",
              "required": true,
              "location": "query",
              "description": "The ID of the file to retrieve"
            },
            "metadata_only": {
              "type": "string",
              "required": false,
              "location": "query",
              "description": "Set to 'true' to get only metadata, omit or set to 'false' to download file",
              "allowed_values": ["true", "false"]
            }
          },
          "example_url": "/api/User/get_user_file_data/?file_id=1",
          "example_metadata_url": "/api/User/get_user_file_data/?file_id=1&metadata_only=true"
        },
        "responses": {
          "200_metadata": {
            "description": "File metadata retrieved successfully (when metadata_only=true)",
            "body": {
              "message": "File metadata retrieved successfully",
              "data": {
                "file_id": 1,
                "file_name": "vat_certificate.pdf",
                "file_type": "application/pdf",
                "file_size": 524288,
                "uploaded_at": "2025-05-29T10:30:00Z"
              }
            }
          },
          "200_download": {
            "description": "File download (when metadata_only is not 'true')",
            "content_type": "application/octet-stream or file specific type",
            "body": "Binary file data with appropriate headers for download"
          },
          "400": {
            "description": "Bad request - file_id missing",
            "body": {
              "message": "file_id parameter is required.",
              "data": []
            }
          },
          "404": {
            "description": "File not found",
            "body": {
              "message": "File not found.",
              "data": []
            }
          },
          "500": {
            "description": "Internal server error",
            "body": {
              "message": "Error retrieving file: [error details]",
              "data": []
            }
          }
        }
      },
      {
        "name": "Delete User",
        "method": "DELETE",
        "endpoint": "/api/User/delete_user/",
        "description": "Deletes a user account (requires superuser privileges)",
        "authentication": "JWT Token required + SuperUser permissions",
        "request": {
          "content_type": "application/json",
          "body": {
            "User_Id": {
              "type": "integer",
              "required": true,
              "description": "ID of the user to delete"
            }
          },
          "headers": {
            "Authorization": "Bearer [JWT_TOKEN]",
            "Content-Type": "application/json"
          },
          "example": {
            "User_Id": 5
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "body": {
              "message": "User deleted successfully.",
              "data": {
                "user_id": 5
              }
            }
          },
          "400": {
            "description": "Bad request - User_Id missing",
            "body": {
              "message": "User_Id is required.",
              "data": []
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "403": {
            "description": "Forbidden - not a superuser",
            "body": {
              "detail": "You do not have permission to perform this action."
            }
          },
          "404": {
            "description": "User not found",
            "body": {
              "message": "User not found.",
              "data": []
            }
          }
        }
      },
      {
        "name": "Update User",
        "method": "PUT",
        "endpoint": "/api/User/update_user/",
        "description": "Updates user profile information. Regular users can only update their own profile, superusers can update any user by providing User_Id",
        "authentication": "JWT Token required",
        "request": {
          "content_type": "application/json",
          "body": {
            "User_Id": {
              "type": "integer",
              "required": false,
              "description": "ID of user to update (superuser only, defaults to authenticated user)"
            },
            "username": {
              "type": "string",
              "required": false,
              "description": "New username"
            },
            "name": {
              "type": "string",
              "required": false,
              "description": "New company/user name"
            },
            "address": {
              "type": "string",
              "required": false,
              "description": "New address"
            },
            "phone_number": {
              "type": "string",
              "required": false,
              "description": "New phone number"
            },
            "email": {
              "type": "string",
              "required": false,
              "description": "New email address"
            },
            "website": {
              "type": "string",
              "required": false,
              "description": "New website URL"
            },
            "CR_number": {
              "type": "string",
              "required": false,
              "description": "New Commercial Registration number"
            }
          },
          "headers": {
            "Authorization": "Bearer [JWT_TOKEN]",
            "Content-Type": "application/json"
          },
          "example": {
            "name": "Updated Company Name Ltd",
            "address": "456 New Business Street",
            "phone_number": "+9876543210",
            "website": "www.updated-company.com"
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "body": {
              "message": "User updated successfully.",
              "data": {
                "User_Id": 8,
                "username": "company1",
                "name": "Updated Company Name Ltd",
                "address": "456 New Business Street",
                "phone_number": "+9876543210",
                "email": "contact@company1.com",
                "website": "www.updated-company.com",
                "CR_number": "CR123456"
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "body": {
              "message": "Error details",
              "data": []
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "body": {
              "detail": "Authentication credentials were not provided."
            }
          },
          "404": {
            "description": "User not found",
            "body": {
              "message": "User not found.",
              "data": []
            }
          }
        }
      }
    ],
    "common_error_responses": {
      "401": {
        "description": "Unauthorized - Authentication required",
        "body": {
          "detail": "Authentication credentials were not provided."
        }
      },
      "403": {
        "description": "Forbidden - Insufficient permissions",
        "body": {
          "detail": "You do not have permission to perform this action."
        }
      },
      "500": {
        "description": "Internal Server Error",
        "body": {
          "message": "Internal server error occurred",
          "data": []
        }
      }
    },
    "authentication": {
      "type": "JWT Bearer Token",
      "description": "Include the token in the Authorization header",
      "header_format": "Authorization: Bearer [TOKEN]",
      "token_obtained_from": "/api/User/login/ endpoint",
      "token_lifetime": "Access tokens have limited lifetime, refresh as needed"
    },
    "notes": {
      "file_uploads": "File uploads use multipart/form-data and support PDF, Excel, and image formats up to 10MB per file",
      "user_roles": "Users can be regular users or superusers with different permission levels",
      "account_approval": "New user registrations require admin approval (Is_Accepted status)",
      "file_storage": "Files are stored as BLOB data in the database",
      "timestamps": "All timestamps are in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)",
      "pagination": "Most list endpoints support pagination with page and page_size parameters",
      "searching": "Most list endpoints support searching with the search parameter"
    }
  }
}
